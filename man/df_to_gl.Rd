% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract_alleles.R
\name{df_to_gl}
\alias{df_to_gl}
\title{Convert multiple columns of HLA allele typings to a single-column GL String}
\usage{
df_to_gl(
  df,
  namespace = "hla",
  version_or_date = NULL,
  col_typing = "glstring",
  loci = c("A", "B", "C", "DPA1", "DPB1", "DQA1", "DQB1", "DRB1", "DRB."),
  suffixes = c("1", "2"),
  sep = "_"
)
}
\arguments{
\item{df}{A dataframe with HLA typings. The names of each HLA typing column
should follow the format \verb{\{locus\}\{sep\}\{suffix\}}, e.g. \code{"A_1"} or \code{"DPB1_2"}.}

\item{namespace}{\href{https://glstring.org/syntax-1.1.html#namespace}{Specification} of the
HLA nomenclature system. Defaults to \code{"hla"}.}

\item{version_or_date}{\href{https://glstring.org/syntax-1.1.html#versionordate}{Specification} of the
version of the \code{namespace} used, or the date the GL String was constructed.
If not specified, uses today's date as the default.}

\item{col_typing}{The name for the new column with the GL Strings.}

\item{loci}{A string or character vector with the loci you are interested in.
Only these alleles will be returned. Defaults to all. \code{DRB.} is used for
DRB3, DRB4, and DRB5.}

\item{suffixes}{What differentiates the alleles for each locus (defaults to
\code{"1"} and \code{"2"}) in the column names.}

\item{sep}{What separates the \code{loci} from the \code{suffixes} in the column names.}
}
\value{
A dataframe with the same amount of rows, but where the columns with
typings of individual alleles have been replaced with a single GL String.
}
\description{
\code{df_to_gl()} takes in a data frame with HLA typings, and summarizes these
columns into a single column with \href{https://glstring.org}{GL Strings}.
}
\examples{
# Make a dataframe following the default naming scheme, with two typings
df_in <- tidyr::tibble(
  id = c("001", "002"),
  A_1 = c("A*01:01", "A*03:01"),
  A_2 = c(NA, "A*02:01"),
  B_1 = c("B*07:01", "B*07:02"),
  B_2 = c("B*08:01", "B*08:02"),
  C_1 = c("C*01:01", "C*01:02"),
  C_2 = c("C*03:04", NA)
)
df_in |>
  dplyr::group_by(id) |> # make one GL string for each typing
  df_to_gl()
}
\seealso{
\itemize{
\item \code{\link[=vec_to_gl]{vec_to_gl()}} for the construction of the GL string
\item \code{\link[=gl_to_df]{gl_to_df()}} for the opposite operation
}
}
